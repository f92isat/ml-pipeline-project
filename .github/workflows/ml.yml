name: ML Pipeline CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  ml-pipeline:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v3
    
    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Descargar dataset
      run: |
        curl -o data/heart.csv https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data
    
    - name: Verificar código con Flake8
      run: |
        flake8 src --max-line-length=100 --exclude=__pycache__
      continue-on-error: true
    
    - name: Ejecutar tests
      run: |
        pytest tests -v --tb=short
    
    - name: Entrenar modelo
      run: |
        python src/train.py
    
    - name: Guardar modelo entrenado
      uses: actions/upload-artifact@v3
      with:
        name: trained-model
        path: |
          mlruns/
          results.csv
        retention-days: 30
    
    - name: Generar reporte de cobertura
      run: |
        pip install pytest-cov
        pytest tests/ --cov=src --cov-report=html
      continue-on-error: true
    
    - name: Publicar reporte
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage-report
        path: htmlcov/
        retention-days: 7